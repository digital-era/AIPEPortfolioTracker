# .github/workflows/data-merger.yml
name: Merge Partial Data Files

on:
  # 1. 当 main 分支下 data/partial_*.json 文件发生变化时自动触发
  push:
    branches:
      - main
    paths:
      - 'data/partial_*.json'
      
  # 2. 允许手动触发以便测试
  workflow_dispatch:

jobs:
  merge-and-commit:
    name: Merge Data and Commit Final Report
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 将合并、提交、清理整合到一个步骤中，逻辑更清晰
      - name: Merge, Commit, and Clean Up
        run: |
          # 安全检查：以防触发工作流但文件已被删除的边缘情况
          if ! ls data/partial_*.json 1> /dev/null 2>&1; then
            echo "No partial files found to merge. Exiting gracefully."
            exit 0
          fi

          echo "Partial files found. Configuring Git and starting merge process."
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # 拉取最新改动，确保合并了所有已推送的 partial 文件，避免并发冲突
          git pull

          echo "Installing jq for JSON processing..."
          sudo apt-get update && sudo apt-get install -y jq
          
          # 使用 jq 将所有 partial 文件中的 JSON 数组合并成一个单一数组
          jq -s 'add' data/partial_*.json > data/stock_dynamic_data_portfolio.json
          echo "Merge complete. Final report 'stock_dynamic_data_portfolio.json' has been generated."
          
          # 添加更新后的主文件
          git add data/stock_dynamic_data_portfolio.json
          
          # 删除已被合并的临时文件
          git rm data/partial_*.json
          
          # 仅在有实际更改时才进行提交和推送
          if ! git diff --staged --quiet; then
            git commit -m "chore(data): Consolidate partial data into main report"
            git push
            echo "Final report committed and partial files cleaned up."
          else
            echo "No changes detected after merge. Skipping commit."
          fi
